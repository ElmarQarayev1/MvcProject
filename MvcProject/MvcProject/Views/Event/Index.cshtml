@model PaginatedList<Event>
@{
    ViewData["Title"] = "Index";
    int order = (Model.PageIndex - 1) * Model.PageSize;
}
<!-- Banner Area Start -->
<div class="banner-area-wrapper">
    <div class="banner-area text-center">
        <div class="container">
            <div class="row">
                <div class="col-xs-12">
                    <div class="banner-content-wrapper">
                        <div class="banner-content">
                            <h2>event</h2>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Banner Area End -->
<!-- Event Start -->
<div class="event-area three text-center pt-150 pb-150">
    <div class="container">
        <div class="row" id="eventList">
            @foreach (var item in Model.Items)
            {
                <div class="col-md-4 col-sm-6 col-xs-12">
                    <div class="single-event mb-60">
                        <div class="event-img">
                            <a asp-action="detail" asp-route-id="@item.Id">
                                <img src="~/uploads/event/@item.Img" alt="event">
                                <div class="course-hover">
                                    <i class="fa fa-link"></i>
                                </div>
                            </a>
                            <div class="event-date">
                                <h3>@item.Date.ToString("dd") <span>@item.Date.ToString("MMM")</span></h3>
                            </div>
                        </div>
                        <div class="event-content text-left">
                            <h4><a href="event-details.html">@item.Name</a></h4>
                            <ul>
                                <li><span>time:</span> @item.StartTime.ToString(@"hh\:mm") AM - @item.EndTime.ToString(@"hh\:mm") PM</li>
                                <li><span>venue</span> @item.Venue</li>
                            </ul>
                            <div class="event-content-right">
                                <a class="default-btn" asp-action="detail" asp-route-id="@item.Id">join now</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <nav aria-label="..." class="d-flex justify-content-center">
            <ul class="pagination">

                @if (Model.PageIndex > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-route-page="@(Model.PageIndex-1)">Previous</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <span class="page-link">Previous</span>
                    </li>
                }

                @if (Model.TotalPages <= 5)
                {
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                            <a class="page-link" asp-route-page="@i">@i</a>
                        </li>
                    }
                }
                else
                {
                    @if (Model.PageIndex <= 3)
                    {
                        @for (int i = 1; i <= 5; i++)
                        {
                            <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                                <a class="page-link" asp-route-page="@i">@i</a>
                            </li>
                        }
                    }
                    else if (Model.PageIndex >= Model.TotalPages - 2)
                    {
                        @for (int i = Model.TotalPages - 4; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                                <a class="page-link" asp-route-page="@i">@i</a>
                            </li>
                        }
                    }
                    else
                    {
                        @for (int i = Model.PageIndex - 2; i <= Model.PageIndex + 2; i++)
                        {
                            <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                                <a class="page-link" asp-route-page="@i">@i</a>
                            </li>
                        }
                    }
                }

                @if (Model.PageIndex < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" asp-route-page="@(Model.PageIndex+1)">Next</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <span class="page-link">Next</span>
                    </li>
                }
            </ul>
        </nav>

        @*<div class="row">
            <div class="col-xs-12 text-center">
                <button id="loadMoreBtn" class="default-btn">Load More</button>
            </div>
        </div>*@
    </div>
</div>
<!-- Event End -->
<!-- Subscribe Start -->
<div class="subscribe-area pt-60 pb-70">
    <div class="container">
        <div class="row">
            <div class="col-md-8 col-md-offset-2">
                <div class="subscribe-content section-title text-center">
                    <h2>subscribe our newsletter</h2>
                    <p>I must explain to you how all this mistaken idea </p>
                </div>
                <div class="newsletter-form mc_embed_signup">
                    <form action="http://devitems.us11.list-manage.com/subscribe/post?u=6bbb9b6f5827bd842d9640c82&amp;id=05d85f18ef" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
                        <div id="mc_embed_signup_scroll" class="mc-form">
                            <input type="email" value="" name="EMAIL" class="email" id="mce-EMAIL" placeholder="Enter your e-mail address" required>
                            <div class="mc-news" aria-hidden="true"><input type="text" name="b_6bbb9b6f5827bd842d9640c82_05d85f18ef" tabindex="-1" value=""></div>
                            <button id="mc-embedded-subscribe" class="default-btn" type="submit" name="subscribe"><span>subscribe</span></button>
                        </div>
                    </form>
                    <div class="mailchimp-alerts">
                        <div class="mailchimp-submitting"></div>
                        <div class="mailchimp-success"></div>
                        <div class="mailchimp-error"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Subscribe End -->

@*@section elmm {
    <script>document.addEventListener("DOMContentLoaded", function () {
            let eventsContainer = document.getElementById("eventList");
            let loadMoreButton = document.getElementById("loadMoreBtn");
            let visibleEvents = 3;
            let allEventsLoaded = false;

            function createEventElement(event) {
                return `
                <div class="col-md-4 col-sm-6 col-xs-12">
                    <div class="single-event mb-60">
                        <div class="event-img">
                            <a href="/Event/Detail/${event.id}">
                                <img src="/uploads/event/${event.img}" alt="event">
                                <div class="course-hover">
                                    <i class="fa fa-link"></i>
                                </div>
                            </a>
                            <div class="event-date">
                                <h3>${new Date(event.date).getDate()} <span>${new Date(event.date).toLocaleString('tr-TR', { month: 'short' })}</span></h3>
                            </div>
                        </div>
                        <div class="event-content text-left">
                            <h4><a href="/Event/Detail/${event.id}">${event.name}</a></h4>
                            <ul>
                                <li><span>time:</span> ${new Date(event.startTime).toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' })} - ${new Date(event.endTime).toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' })}</li>
                                <li><span>venue:</span> ${event.venue}</li>
                            </ul>
                            <div class="event-content-right">
                                <a class="default-btn" href="/Event/Detail/${event.id}">join now</a>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            }
            function loadMoreEvents() {
                fetch("/Event/LoadMore?skipCount=" + visibleEvents)
                    .then(response => {
                        if (response.status === 204) {
                            loadMoreButton.style.display = "none";
                            allEventsLoaded = true;
                            console.log('No more events to load.');
                            return Promise.reject('No more events');
                        } else if (!response.ok) {
                            throw new Error(`Network response was not ok: ${response.statusText}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.length === 0) {
                            loadMoreButton.style.display = "none";
                            allEventsLoaded = true;
                            console.log('All events loaded.');
                        } else {
                            data.forEach(event => {
                                let eventElement = createEventElement(event);
                                eventsContainer.insertAdjacentHTML('beforeend', eventElement);
                            });
                            visibleEvents += data.length;
                            if (data.length < 3) {
                                loadMoreButton.style.display = "none";
                                allEventsLoaded = true;
                            }
                        }
                    })
                    .catch(error => {
                        if (error === 'No more events') {
                            console.log('All events loaded.');
                        } else {
                            console.error('Error fetching events:', error);
                        }
                    });
            }

            loadMoreButton.addEventListener("click", (event) => {
                event.preventDefault();
                if (!allEventsLoaded) {
                    loadMoreEvents();
                }
            });
        });</script>
}*@
